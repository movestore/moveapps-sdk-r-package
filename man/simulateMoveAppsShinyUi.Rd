% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/moveapps.R
\name{simulateMoveAppsShinyUi}
\alias{simulateMoveAppsShinyUi}
\title{Simulate MoveApps Shiny UI}
\usage{
simulateMoveAppsShinyUi(request)
}
\arguments{
\item{request}{A Shiny HTTP request object. This parameter follows Shiny's
standard UI function signature but is not actively used in the implementation.}
}
\value{
A \code{fluidPage} object containing the complete Shiny UI layout
with embedded JavaScript files, CSS styles, module interface, and
bookmark functionality.
}
\description{
Creates the user interface for a MoveApps Shiny application simulation.
This function builds a fluid page layout with necessary JavaScript files,
CSS styles, and UI components for the Shiny module interface.
}
\details{
The function creates a UI that includes:
\itemize{
\item WebSocket keep-alive JavaScript fix and associated CSS
\item Custom JavaScript for extracting Shiny input values
\item The main Shiny module user interface via \code{shinyModuleUserInterface}
\item WebSocket heartbeat text output for connection stability
\item A bookmark button for saving application settings
}

The WebSocket fixes are implemented to address known issues with Shiny
WebSocket connections timing out during long-running operations.
}
\examples{
\dontrun{
# Use in a Shiny application
ui <- simulateMoveAppsShinyUi
}

}
\seealso{
\code{\link{simulateMoveAppsShinyServer}}, \code{\link{shinyModuleUserInterface}}
}
