% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/moveapps.R
\name{simulateMoveAppsShinyServer}
\alias{simulateMoveAppsShinyServer}
\title{Simulate MoveApps Shiny Server}
\usage{
simulateMoveAppsShinyServer(input, output, session)
}
\arguments{
\item{input}{Standard Shiny server input object containing reactive values
from UI components.}

\item{output}{Standard Shiny server output object for sending data to UI.}

\item{session}{Standard Shiny server session object for managing the user session.}
}
\value{
No explicit return value. The function sets up reactive observers
and handles all server-side logic through side effects.
}
\description{
Implements the server logic for a MoveApps Shiny application simulation.
This function handles data reading, module execution, bookmark management,
result storage, and error handling for the Shiny application.
}
\details{
The function performs the following operations:
\itemize{
\item Reads input data using \code{readInput(sourceFile())}
\item Calls the Shiny module with data if available
\item Restores bookmarks from previous sessions automatically
\item Handles bookmark creation when the bookmark button is clicked
\item Extracts and saves Shiny input as JSON for external access
\item Stores results to output file when computation completes
\item Implements WebSocket heartbeat for connection stability
\item Provides comprehensive error handling with logging and app termination
}

The function includes special handling for error code 10, which triggers
application termination, while other errors are re-thrown after logging.
}
\examples{
\dontrun{
# Use in a Shiny application
server <- simulateMoveAppsShinyServer

# Run the complete app
shinyApp(ui = simulateMoveAppsShinyUi, server = simulateMoveAppsShinyServer)
}

}
\seealso{
\code{\link{simulateMoveAppsShinyUi}}, \code{\link{readInput}},
\code{\link{storeResult}}, \code{\link{restoreShinyBookmark}},
\code{\link{saveInputAsJson}}
}
